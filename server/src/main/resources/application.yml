spring:
  config:
    import: env_local.yml
---

spring:
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            client-name: kakao
            client-authentication-method: POST
            authorization-grant-type: authorization_code
            #            redirect-uri: ${KAKAO_REDIRECT_URL}
            #            redirect-uri: "{baseUrl}/oauth2/callback/{registrationId}"
            redirect-uri: ${KAKAO_REDIRECT_URL}
            scope:
              - profile_nickname
              - account_email
        provider:
          kakao:
            authorization-uri: ${KAKAO_AUTH_URL}
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

---

jwt:
  header: Authorization
  secret: ${JWT_SECRET_KEY}
  access-token-expire: ${ACCESS_TOKEN_EXPIRE}
  refresh-token-expire: ${REFRESH_TOKEN_EXPIRE}
  share-token-expire: ${SHARE_TOKEN_EXPIRE}

---

spring:
  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    url: ${MARIA_URL}
    username: ${MARIA_USERNAME}
    password: ${MARIA_PASSWORD}
    hikari:
      maximum-pool-size: 148
      max-lifetime: 60000
  data:
    mongodb:
      host: ${MONGO_HOST}
      port: ${MONGO_PORT}
      uri: ${MONGODB_URI}
      authentication-database: admin
      username: ${MONGO_DATABASE_USERNAME}
      password: ${DATABASE_PASSWORD}
      database: ${MONGO_DATABASE_NAME}

---

spring:
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
      naming:
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl # ?? camelCase-> underscore ?? ??.
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MariaDBDialect
        order_updates: true
        order_inserts: true
        jdbc:
          batch_size: 100
    open-in-view: false

---
spring:
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}

---

spring:
  main:
    allow-bean-definition-overriding: true

---
server:
  port: ${SPRING_SERVER_PORT}



# 토큰 관련 secret Key 및 RedirectUri 설정
#  app:
#    auth:
#      tokenSecret:
#      tokenExpiry:
#      refreshTokenExpiry:
#    oauth2:
#      authorizedRedirectUris:
#        -

